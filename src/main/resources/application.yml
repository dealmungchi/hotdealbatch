spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  sql:
    init:
      mode: always
  jpa:
    hibernate:
      ddl-auto: none
  data:
    redis:
      repositories:
        enabled: false

logging:
  level:
    root: INFO
    
redis:
  stream:
    key-prefix: ${REDIS_STREAM_KEY:streamHotdeals}
    partitions: ${REDIS_STREAM_PARTITIONS:1}
    consumer-group: ${REDIS_STREAM_CONSUMER_GROUP:hotdeals-batch-group}
    consumer-prefix: ${REDIS_STREAM_CONSUMER_PREFIX:consumer-}
    block-timeout: ${REDIS_STREAM_BLOCK_TIMEOUT:2000}
    batch-size: ${REDIS_STREAM_BATCH_SIZE:10}
    poll-timeout: ${REDIS_STREAM_POLL_TIMEOUT:100}
    delivery-retry-count: ${REDIS_STREAM_DELIVERY_RETRY_COUNT:3}
    message-claim-min-idle-time: ${REDIS_STREAM_MESSAGE_CLAIM_MIN_IDLE_TIME:30000}
    backpressure-buffer-size: ${REDIS_STREAM_BACKPRESSURE_BUFFER_SIZE:512}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
          enabled: true

  metrics:
    distribution:
      percentiles-histogram:
        hotdeal.message.processing.time: true

---

spring:
  config:
    activate:
      on-profile: dev
  sql:
    init:
      data-locations: classpath:sql/data-dev.sql
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password: ""
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    kr.co.dealmungchi: INFO
    org.springframework.data.redis: INFO

---

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:hotdeals}
    driverClassName: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

logging:
  level:
    kr.co.dealmungchi: INFO