FROM eclipse-temurin:17-jre-jammy as builder

WORKDIR /app

COPY gradlew .
COPY gradle gradle
COPY build.gradle .
COPY settings.gradle .
COPY src src

RUN ./gradlew build -x test

FROM eclipse-temurin:17-jre-jammy

WORKDIR /app

COPY --from=builder /app/build/libs/*.jar app.jar

ARG SPRING_PROFILES_ACTIVE=prod
ENV SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE

# Database Configuration
ENV DB_HOST=$DB_HOST
ENV DB_PORT=$DB_PORT
ENV DB_NAME=$DB_NAME
ENV DB_USERNAME=$DB_USERNAME
ENV DB_PASSWORD=$DB_PASSWORD

# Redis Configuration
ENV REDIS_HOST=$REDIS_HOST
ENV REDIS_PORT=$REDIS_PORT

# Redis Stream Configuration
ENV REDIS_STREAM_KEY=$REDIS_STREAM_KEY
ENV REDIS_STREAM_PARTITIONS=$REDIS_STREAM_PARTITIONS
ENV REDIS_STREAM_CONSUMER_GROUP=$REDIS_STREAM_CONSUMER_GROUP
ENV REDIS_STREAM_CONSUMER=$REDIS_STREAM_CONSUMER
ENV REDIS_STREAM_BLOCK_TIMEOUT=$REDIS_STREAM_BLOCK_TIMEOUT
ENV REDIS_STREAM_BATCH_SIZE=$REDIS_STREAM_BATCH_SIZE
ENV REDIS_STREAM_POLL_TIMEOUT=$REDIS_STREAM_POLL_TIMEOUT
ENV REDIS_STREAM_DELIVERY_RETRY_COUNT=$REDIS_STREAM_DELIVERY_RETRY_COUNT
ENV REDIS_STREAM_MESSAGE_CLAIM_MIN_IDLE_TIME=$REDIS_STREAM_MESSAGE_CLAIM_MIN_IDLE_TIME
ENV REDIS_STREAM_BACKPRESSURE_BUFFER_SIZE=$REDIS_STREAM_BACKPRESSURE_BUFFER_SIZE

# LocalFile Configuration
ENV FILE_UPLOAD_DIR=$FILE_UPLOAD_DIR

# AWS S3 Configuration
ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_REGION=$AWS_REGION
ENV AWS_S3_BUCKET=$AWS_S3_BUCKET

# JVM configurations for container environment
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom"

EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=3s --retries=3 CMD wget -q --spider http://localhost:8080/actuator/health || exit 1

ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]