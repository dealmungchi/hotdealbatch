version: '3.8'

services:
  app:
    build: 
      context: .
      args:
        - SPRING_PROFILES_ACTIVE=prod
    container_name: hotdealbatch
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Database configuration
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=hotdeals
      - DB_USERNAME=hotdeals_user
      - DB_PASSWORD=hotdeals_pass
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Redis Stream configuration
      - REDIS_STREAM_KEY=streamHotdeals
      - REDIS_STREAM_PARTITIONS=1
      - REDIS_STREAM_CONSUMER_GROUP=hotdeals-batch-group
      - REDIS_STREAM_CONSUMER=consumer-1
      - REDIS_STREAM_BLOCK_TIMEOUT=2000
      - REDIS_STREAM_BATCH_SIZE=10
      - REDIS_STREAM_POLL_TIMEOUT=100
      - REDIS_STREAM_DELIVERY_RETRY_COUNT=3
      - REDIS_STREAM_MESSAGE_CLAIM_MIN_IDLE_TIME=30000
      - REDIS_STREAM_NEW_HOTDEALS_KEY=streamNewHotdeals
      - REDIS_STREAM_NEW_HOTDEALS_PARTITIONS=1
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/var/log/hotdealbatch
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    container_name: hotdealbatch-mysql
    restart: always
    environment:
      - MYSQL_DATABASE=hotdeals
      - MYSQL_USER=hotdeals_user
      - MYSQL_PASSWORD=hotdeals_pass
      - MYSQL_ROOT_PASSWORD=root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0
    container_name: hotdealbatch-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["redis-server", "--appendonly", "yes"]

volumes:
  mysql-data:
  redis-data: